@page "/coupons"
@using System.Text.Json
@using System.Text.Json.Serialization
@using Neapolitana.Web.Models
@using Neapolitana.Web.Service.IService
@using Newtonsoft.Json

@attribute [StreamRendering]
@inject IHttpClientFactory ClientFactory
@inject ICouponService CouponService

<PageTitle>Coupon</PageTitle>

<h1>Coupon</h1>

<p>This component demonstrates showing data.</p>

@if (coupons.Count() < 0)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Code</th>
                <th>Discount %</th>
                <th>Minimum Amount</th>

            </tr>
        </thead>
        <tbody>
            @foreach (var coupon in coupons)
            {
                <tr>
                    <td>@coupon.Code</td>
                    <td>@coupon.Discount</td>
                    <td>@coupon.MinimumAmount</td>
                    <td>
                        <a href='/user/edit/@coupon.Id' class="btn btn-outline-dark" role="button">
                            Edit
                        </a>
                        <a href='/api' class="btn btn-outline-danger" role="button">
                            Delete
                        </a>
                    </td>
                </tr>

            }
        </tbody>
    </table>
}

@code {
    private IEnumerable<CouponDTO>? coupons = [];

    protected override async Task OnInitializedAsync()
    {
        var response = await CouponService.GetAllCouponAsync();

        coupons = JsonConvert.DeserializeObject<List<CouponDTO>>(Convert.ToString(response.Result));

        // var request = new HttpRequestMessage(HttpMethod.Get, "https://localhost:7001/api/CouponAPI");

        // var client = ClientFactory.CreateClient();

        // var response = await client.SendAsync(request);

        // if(response.IsSuccessStatusCode)
        // {
        //     using var resStream = await response.Content.ReadAsStreamAsync();
        //     responseDto = await JsonSerializer.DeserializeAsync<ResponseDto>(resStream, new JsonSerializerOptions() {PropertyNameCaseInsensitive = true});
        // }

    }

    public class Coupon
    {

        public int Id { get; set; }
        public string Code { get; set; }
        public double Discount { get; set; }
        public int MinimumAmount { get; set; }

    }

    //     public class ResponseDto
    //     {
    //         public IEnumerable<Coupon> Result { get; set; }
    //         public bool IsSuccess { get; set; }
    //         public string? Message { get; set; }
    //     }
}
